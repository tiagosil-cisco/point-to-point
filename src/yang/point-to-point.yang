module point-to-point {

  namespace "http://example.com/point-to-point";
  prefix point-to-point;

  import ietf-inet-types {
    prefix inet;
  }
  import tailf-common {
    prefix tailf;
  }
  import tailf-ncs {
    prefix ncs;
  }

  import ietf-yang-types {
    prefix yang;
  }


  description
    "Bla bla...";

  revision 2016-01-01 {
    description
      "Initial revision.";
  }

grouping ipv4_address {
  leaf ipv4-address {
      type inet:ipv4-address;
    }
    leaf mask {
      type inet:ipv4-address;
    }
}

grouping device_int_config {
  leaf device {
        type leafref {
          path "/ncs:devices/ncs:device/ncs:name";
        }
        mandatory true;
      }
      leaf interface_type {
        type interface_types;
        mandatory true;
      }
      leaf interface_id {
      type string;
      mandatory true;
    }
      uses ipv4_address;

      leaf link_state {
        type enumeration {
          enum "shutdown";
          enum "no shutdown";
        }
      }

}
typedef interface_types {
  type enumeration {
    enum GigabitEthernet;
    enum TenGigE;
    enum FortyGigE;
    enum HundredGigE;
  }
}

augment /ncs:services {
  list point-to-point {
    description "This is an RFS skeleton service";

key name;
      leaf name {
      tailf:info "Unique service id";
      type string;
    }

    uses ncs:service-data;
    ncs:servicepoint point-to-point-servicepoint;

    leaf bw {
            type enumeration {
              enum "1 Gbps";
              enum "10 Gbps";
              enum "40 Gbps";
              enum "100 Gbps";
            }
    }

    leaf cdp {
      type boolean;
    }

    leaf mtu {
      type int32;
    }

    container side_a {
      uses device_int_config;
    }

    container side_b {
      uses device_int_config;
    }


  }
}
}
